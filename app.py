import streamlit as st
import pandas as pd
from dashboard.visualisation import afficher_dashboard
from form.formulaire import afficher_formulaire

# --- Configuration de la page ---
st.set_page_config(page_title="Univers des donn√©es", layout="wide")
st.title("üèòÔ∏è Bienvenue dans l'univers des donn√©es")
st.markdown("Explorez, t√©l√©chargez, visualisez et √©valuez.")

# --- Menu de navigation ---
menu = st.sidebar.radio("Navigation", [
    "Scraper les donn√©es (nettoy√©es)",
    "T√©l√©charger les donn√©es brutes",
    "Visualiser le dashboard",
    "Donner votre avis"
])

# --- Fichiers de donn√©es ---
fichiers_bruts = {
    "Appartements √† louer": "data/expat_dkr_app_a_louer.xlsx",
    "Appartements meubl√©s": "data/expat_dkr_app_meubles.xlsx",
    "Terrains √† vendre": "data/expat_dkr_terrain_a_vendre.xlsx"
}

fichiers_nettoyes = {
    "Appartements meubl√©s": "data/expat_dkr_app_meubles.csv",
    "Terrains √† vendre": "data/expat_dkr_terrain_a_vendre.csv",
    "Appartements √† louer": "data/expat_dkr_app_a_louer.csv"
}

# --- Scraper les donn√©es (√† partir des fichiers existants) ---
if menu == "Scraper les donn√©es (nettoy√©es)":
    st.header("Extraire les donn√©es disponibles")

    categorie = st.selectbox("Choisissez une cat√©gorie :", list(fichiers_nettoyes.keys()))
    nb_lignes = st.slider("Nombre d'annonces √† extraire :", min_value=1, max_value=100, value=10)

    fichier = fichiers_nettoyes[categorie]

    try:
        df = pd.read_csv(fichier)
        extrait = df.head(nb_lignes)

        st.download_button(
            label=f"‚¨áÔ∏è T√©l√©charger les {nb_lignes} premi√®res annonces",
            data=extrait.to_csv(index=False).encode("utf-8"),
            file_name=f"{categorie.lower().replace(' ', '_')}_{nb_lignes}_annonces.csv",
            mime="text/csv"
        )
    except FileNotFoundError:
        st.error(f"Le fichier {fichier} est introuvable. Lancez `run_scraper.py` depuis votre machine pour le g√©n√©rer.")

# --- T√©l√©chargement des donn√©es brutes ---
elif menu == "T√©l√©charger les donn√©es brutes":
    st.header("T√©l√©chargement des donn√©es brutes")
    st.markdown("T√©l√©chargez les fichiers originaux au format `.csv` extraits avec Web Scraper.")
    for titre, chemin in fichiers_bruts.items():
        df = pd.read_excel(chemin)
        st.download_button(
            label=f"T√©l√©charger : {titre}",
            data=df.to_csv(index=False).encode('utf-8'),
            file_name=chemin.replace("data/", "").replace(".xlsx", ".csv"),
            mime="text/csv"
        )

# --- Visualisation Dashboard ---
elif menu == "Visualiser le dashboard":
    st.header("Dashboard des donn√©es nettoy√©es")
    choix = st.selectbox("S√©lectionnez une cat√©gorie :", list(fichiers_nettoyes.keys()))
    df = pd.read_csv(fichiers_nettoyes[choix])
    afficher_dashboard(df, choix)

# --- √âvaluation de l'application ---
elif menu == "Donner votre avis":
    st.header("Donnez votre avis")
    afficher_formulaire()
